{"ast":null,"code":"var _jsxFileName = \"/Users/sina_neueder/Desktop/capstone_littlelemon/littlelemon-capstone/littlelemon-capstone/src/components/SetDate.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\n\n//using API from https://react-day-picker.js.org\n\nimport { format } from \"date-fns\";\nimport { DayPicker } from \"react-day-picker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SetDate() {\n  const today = new Date();\n  const nextMonth = addMonths(new Date(), 1);\n  const [month, setMonth] = useState < Date > nextMonth;\n  const footer = /*#__PURE__*/_jsxDEV(\"button\", {\n    disabled: isSameMonth(today, month),\n    onClick: () => setMonth(today),\n    children: \"Go to Today\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(DayPicker, {\n    month: month,\n    onMonthChange: setMonth,\n    footer: footer,\n    showOutsideDays: true,\n    fixedWeeks: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = SetDate;\nvar _c;\n$RefreshReg$(_c, \"SetDate\");","map":{"version":3,"names":["React","useState","format","DayPicker","jsxDEV","_jsxDEV","SetDate","today","Date","nextMonth","addMonths","month","setMonth","footer","disabled","isSameMonth","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","onMonthChange","showOutsideDays","fixedWeeks","_c","$RefreshReg$"],"sources":["/Users/sina_neueder/Desktop/capstone_littlelemon/littlelemon-capstone/littlelemon-capstone/src/components/SetDate.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\n//using API from https://react-day-picker.js.org\n\nimport { format } from \"date-fns\";\nimport { DayPicker } from \"react-day-picker\";\n\nexport default function SetDate() {\n  const today = new Date();\n  const nextMonth = addMonths(new Date(), 1);\n  const [month, setMonth] = useState < Date > nextMonth;\n  const footer = (\n    <button\n      disabled={isSameMonth(today, month)}\n      onClick={() => setMonth(today)}\n    >\n      Go to Today\n    </button>\n  );\n  return (\n    <DayPicker\n      month={month}\n      onMonthChange={setMonth}\n      footer={footer}\n      showOutsideDays\n      fixedWeeks\n    />\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;;AAEhC;;AAEA,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,OAAOA,CAAA,EAAG;EAChC,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB,MAAMC,SAAS,GAAGC,SAAS,CAAC,IAAIF,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1C,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,GAAGO,IAAI,GAAGC,SAAS;EACrD,MAAMI,MAAM,gBACVR,OAAA;IACES,QAAQ,EAAEC,WAAW,CAACR,KAAK,EAAEI,KAAK,CAAE;IACpCK,OAAO,EAAEA,CAAA,KAAMJ,QAAQ,CAACL,KAAK,CAAE;IAAAU,QAAA,EAChC;EAED;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CACT;EACD,oBACEhB,OAAA,CAACF,SAAS;IACRQ,KAAK,EAAEA,KAAM;IACbW,aAAa,EAAEV,QAAS;IACxBC,MAAM,EAAEA,MAAO;IACfU,eAAe;IACfC,UAAU;EAAA;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEN;AAACI,EAAA,GArBuBnB,OAAO;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}